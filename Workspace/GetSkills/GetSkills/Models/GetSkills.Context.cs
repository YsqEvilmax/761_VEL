//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetSkills.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GetSkillsEntities : DbContext
    {
        public GetSkillsEntities()
            : base("name=GetSkillsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<board> board { get; set; }
        public virtual DbSet<category> category { get; set; }
        public virtual DbSet<class_students> class_students { get; set; }
        public virtual DbSet<classes> classes { get; set; }
        public virtual DbSet<client_details> client_details { get; set; }
        public virtual DbSet<contact_us> contact_us { get; set; }
        public virtual DbSet<content> content { get; set; }
        public virtual DbSet<course_price> course_price { get; set; }
        public virtual DbSet<courses> courses { get; set; }
        public virtual DbSet<courses_category> courses_category { get; set; }
        public virtual DbSet<courses_sort_order> courses_sort_order { get; set; }
        public virtual DbSet<demo_requests> demo_requests { get; set; }
        public virtual DbSet<email_group_contacts> email_group_contacts { get; set; }
        public virtual DbSet<emails> emails { get; set; }
        public virtual DbSet<grade> grade { get; set; }
        public virtual DbSet<interview_schedules> interview_schedules { get; set; }
        public virtual DbSet<interview_students> interview_students { get; set; }
        public virtual DbSet<interviews> interviews { get; set; }
        public virtual DbSet<manager_details> manager_details { get; set; }
        public virtual DbSet<mapping> mapping { get; set; }
        public virtual DbSet<mapping_subjects> mapping_subjects { get; set; }
        public virtual DbSet<newemailgroups> newemailgroups { get; set; }
        public virtual DbSet<order_days> order_days { get; set; }
        public virtual DbSet<order_subjects> order_subjects { get; set; }
        public virtual DbSet<payment_log> payment_log { get; set; }
        public virtual DbSet<permissions> permissions { get; set; }
        public virtual DbSet<profile> profile { get; set; }
        public virtual DbSet<question_answers> question_answers { get; set; }
        public virtual DbSet<specializations> specializations { get; set; }
        public virtual DbSet<student_courses> student_courses { get; set; }
        public virtual DbSet<student_details> student_details { get; set; }
        public virtual DbSet<student_orders> student_orders { get; set; }
        public virtual DbSet<student_subject_details> student_subject_details { get; set; }
        public virtual DbSet<subject> subject { get; set; }
        public virtual DbSet<success_story> success_story { get; set; }
        public virtual DbSet<success_story_category> success_story_category { get; set; }
        public virtual DbSet<success_story_courses> success_story_courses { get; set; }
        public virtual DbSet<teacher_details> teacher_details { get; set; }
        public virtual DbSet<teacher_subject_details> teacher_subject_details { get; set; }
        public virtual DbSet<teammembers> teammembers { get; set; }
        public virtual DbSet<test_attempt_details> test_attempt_details { get; set; }
        public virtual DbSet<test_attempts> test_attempts { get; set; }
        public virtual DbSet<test_questions> test_questions { get; set; }
        public virtual DbSet<tests> tests { get; set; }
        public virtual DbSet<topics> topics { get; set; }
        public virtual DbSet<uploadtest> uploadtest { get; set; }
        public virtual DbSet<user_emails> user_emails { get; set; }
        public virtual DbSet<users> users { get; set; }
        public virtual DbSet<users_permissions> users_permissions { get; set; }
        public virtual DbSet<videos> videos { get; set; }
        public virtual DbSet<visitor_enquiry> visitor_enquiry { get; set; }
        public virtual DbSet<MSSsmaDmNCKeyColumns> MSSsmaDmNCKeyColumns { get; set; }
        public virtual DbSet<MSSsmaDmTables> MSSsmaDmTables { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual int sp_MSSsmaDmDisableConstraints(string key_type, Nullable<int> mode, Nullable<int> parallel_load, Nullable<int> minimal_logging, ObjectParameter error_log)
        {
            var key_typeParameter = key_type != null ?
                new ObjectParameter("key_type", key_type) :
                new ObjectParameter("key_type", typeof(string));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(int));
    
            var parallel_loadParameter = parallel_load.HasValue ?
                new ObjectParameter("parallel_load", parallel_load) :
                new ObjectParameter("parallel_load", typeof(int));
    
            var minimal_loggingParameter = minimal_logging.HasValue ?
                new ObjectParameter("minimal_logging", minimal_logging) :
                new ObjectParameter("minimal_logging", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MSSsmaDmDisableConstraints", key_typeParameter, modeParameter, parallel_loadParameter, minimal_loggingParameter, error_log);
        }
    
        public virtual int sp_MSSsmaDmFixConstraints(string key_type, Nullable<int> mode, Nullable<int> parallel_load, Nullable<int> minimal_logging, ObjectParameter error_log)
        {
            var key_typeParameter = key_type != null ?
                new ObjectParameter("key_type", key_type) :
                new ObjectParameter("key_type", typeof(string));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(int));
    
            var parallel_loadParameter = parallel_load.HasValue ?
                new ObjectParameter("parallel_load", parallel_load) :
                new ObjectParameter("parallel_load", typeof(int));
    
            var minimal_loggingParameter = minimal_logging.HasValue ?
                new ObjectParameter("minimal_logging", minimal_logging) :
                new ObjectParameter("minimal_logging", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MSSsmaDmFixConstraints", key_typeParameter, modeParameter, parallel_loadParameter, minimal_loggingParameter, error_log);
        }
    }
}
